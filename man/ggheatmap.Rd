% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggheatmap.R
\name{ggheatmap}
\alias{ggheatmap}
\title{Plot heatmap.}
\usage{
ggheatmap(x, value.name = "value", show.diag = TRUE, type = "complete",
  range = NULL, show.values = FALSE, value.size = 1.5,
  value.color = "white")
}
\arguments{
\item{x}{[\code{matrix} | \code{list of matrices} | \code{data.frame}]\cr
Data frame, matrix or a list of matrices.}

\item{value.name}{[\code{character(1)}]\cr
Name for the values represented by the matrix.
Internally, the matrix is transformed into a \code{data.frame}
via \code{\link[reshape2]{melt}} in order to obtain a format
which may be processed by \code{\link[ggplot2]{ggplot}} easily.
Default is \dQuote{value}.}

\item{show.diag}{[\code{logical(1)}]\cr
If \code{x} is a square matrix, e.g., a correlation matrix, or \code{x} is
a list of square matrices this argument controls whether the diagonal elements
should be visualized.
Default is \code{TRUE}.}

\item{type}{[\code{character(1)}]|cr
Values \dQuote{lower.tri} and \dQuote{upper.tri} respectively display the lower
or upper triangular matrix only. Option \dQuote{complete} is the default and
displays all values.
This option is ignored if \code{x} is already a data frame or the passed
matrix/matrices are not square.}

\item{range}{[\code{numeric(2)}]\cr
Possibility to cap values below \code{range[1]} and above \code{range[2]}.
Defaults to \code{NULL}, i.e., no capping at all.}

\item{show.values}{[\code{logical(1L)}]\cr
Should the values be printed within the heatmap cells?
Default is \code{FALSE}.}

\item{value.size}{[\code{numeric(1)}]\cr
Size of the printed values.
Only relevant if \code{show.values} is \code{TRUE}.
Default is 1.5.}

\item{value.color}{[\code{character(1)}]\cr
Color of text in cells.
Only relevant if \code{show.values} is \code{TRUE}.
Default is \dQuote{white}.}
}
\value{
[\code{\link[ggplot2]{ggplot}}] ggplot object.
}
\description{
Given a data frame, a matrix or a list of matrices this function
visualizes the given data by a heatmap utilizing \pkg{ggplot2}.
}
\examples{
# simulate two (correlation) matrizes
x = matrix(runif(100), ncol = 10)
y = matrix(runif(100), ncol = 10)

# matrix x in ggplot2-friendly long format
x.df = reshape2::melt(x)

\dontrun{
# Single heatmap with default settings
pl = plotHeatmap(x.df)

# Show values and display lower triangular matrix only
pl = plotHeatmap(x, show.values = TRUE, type = "lower.tri", show.diag = FALSE)

# Now we omit value outside the interval [10, 80]
pl = plotHeatmap(x, range = c(10, 80))

# Two heatmaps side by side
pl = plotHeatmap(list(x, y), value.name = "Similarity")

# Same as above with custom names
pl = plotHeatmap(list(MatrixX = x, MatrixY = y), value.name = "Similarity")

}
}
